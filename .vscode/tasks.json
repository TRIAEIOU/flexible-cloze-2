{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Build clean",
            "type": "shell",
            "command": "Write-Host -NoNewline 'Building clean...'; rm -R -Force ./build/*, ./dist/*, ./bin/*; Write-Host ' done'",
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "presentation": {
                "echo": false,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": false,
                "clear": false
            }
        },
        {
            "label": "Build py",
            "type": "shell",
            "command": "Write-Host -NoNewline 'Building py...'; ls ./src/py/*.py | ? { -not (Test-Path ('./bin/' + $_.Name) -PathType Leaf) -or (Test-Path ('./bin/' + $_.Name) -OlderThan $_.LastWriteTime) } | % {$_.FullName} | cp -Force -Destination ./bin | Out-Null; Write-Host ' done'",
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "presentation": {
                "echo": false,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": false,
                "clear": false
            }
        },
        {
            "label": "Build ts",
            "type": "shell",
            "command": "Write-Host -NoNewline 'Building ts...'; rollup -c; Write-Host ' done'",
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "presentation": {
                "echo": false,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": false,
                "clear": false
            }
        },
        {
            "label": "Build front template",
            "type": "shell",
            "command": "Write-Host -NoNewline 'Building front template...'; Get-Content -Raw ./src/html/fc2.html | %{$_.Replace('/*--###CFG###--*/', $(Get-Content -Raw ./src/cfg/cfg_front.js).Trim())} | %{$_.Replace('/*--###FUNC###--*/', $(Get-Content -Raw ./build/fc2.js | %{$_.Replace('__TEMPLATE_SIDE__', '''front''')}).Trim())} | Out-File ./bin/fc2-front.html; Write-Host ' done'",
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "presentation": {
                "echo": false,
                "reveal": "never",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": false,
                "clear": false
            }
        },
        {
            "label": "Build back template",
            "type": "shell",
            "command": "Write-Host -NoNewline 'Building back template...'; Get-Content -Raw ./src/html/fc2.html | %{$_.Replace('/*--###CFG###--*/', $(Get-Content -Raw ./src/cfg/cfg_back.js).Trim())} | %{$_.Replace('/*--###FUNC###--*/', $(Get-Content -Raw ./build/fc2.js | %{$_.Replace('__TEMPLATE_SIDE__', '''back''')}).Trim())} | Out-File ./bin/fc2-back.html; Write-Host ' done'",
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "presentation": {
                "echo": false,
                "reveal": "never",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": false,
                "clear": false
            }
        },
        {
            "label": "Build templates",
            "type": "shell",
            "command": "Write-Host -NoNewline 'Building templates...'; cp ./src/html/*.css ./bin | Out-Null; Write-Host ' done'",
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "dependsOrder": "sequence",
            "dependsOn": [
                "Build ts",
                "Build front template",
                "Build back template"
            ],
            "presentation": {
                "echo": false,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": false,
                "clear": false
            }
        },
        {
            "label": "Build all",
            "type": "shell",
            "command": "Write-Host -NoNewline 'Building all...'; Write-Host ' done'",
            "dependsOn": [
                "Build templates",
                "Build py"
            ],
            "presentation": {
                "echo": false,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": false,
                "clear": false
            }
        },
        {
            "label": "Build update",
            "type": "shell",
            "command": "Write-Host -NoNewline 'Building update...'; rm -R -Force ./dist/*; rm -R -Force ./bin/__pycache__ 2>Out-Null; Get-ChildItem -Path ./bin/*.html, ./bin/*.py, ./bin/*.css, ./README.md, ./LICENSE | Compress-Archive -Force -DestinationPath ./dist/update.zip; pandoc -t ${env:CODEPATH}/pandoc/anki-addon.lua --abbreviations=${env:CODEPATH}/pandoc/empty ./README.md -o ./dist/update.txt | Out-Null; Write-Host ' done'",
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "dependsOn": [
                "Build all"
            ],
            "presentation": {
                "echo": false,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": false,
                "clear": false
            }
        },
    ]
}